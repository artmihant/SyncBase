#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∑–∞–ø—É—Å–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv


def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é...")
    print("=" * 60)
    
    all_ok = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7+")
        all_ok = False
    else:
        print("‚úÖ Python –≤–µ—Ä—Å–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    print(f"\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...")
    if not os.path.exists(".env"):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        all_ok = False
    else:
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        load_dotenv()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ YANDEX_DISK_TOKEN
        yandex_token = os.getenv("YANDEX_DISK_TOKEN")
        if not yandex_token:
            print("‚ùå YANDEX_DISK_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
            all_ok = False
        else:
            print(f"‚úÖ YANDEX_DISK_TOKEN –Ω–∞–π–¥–µ–Ω: {yandex_token[:10]}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ BASE_PATH
        base_path = os.getenv("BASE_PATH")
        if not base_path:
            print("‚ùå BASE_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
            all_ok = False
        else:
            print(f"‚úÖ BASE_PATH –Ω–∞–π–¥–µ–Ω: {base_path}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–∏
            if not os.path.exists(base_path):
                print(f"‚ùå –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞ {base_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                all_ok = False
            else:
                print(f"‚úÖ –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞ {base_path} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ test_project –ø–∞–ø–∫–∏
    print(f"\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ test_project –ø–∞–ø–∫–∏...")
    if not os.path.exists("test_project"):
        print("‚ùå –ü–∞–ø–∫–∞ test_project –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        all_ok = False
    else:
        print("‚úÖ –ü–∞–ø–∫–∞ test_project –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        test_project_path = Path("test_project")
        required_files = [".syncignore", "README.md", "package.json"]
        
        for file_name in required_files:
            file_path = test_project_path / file_name
            if file_path.exists():
                print(f"  ‚úÖ {file_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"  ‚ö†Ô∏è {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ sync_project.py
    print(f"\nüìú –ü—Ä–æ–≤–µ—Ä–∫–∞ sync_project.py...")
    if not os.path.exists("sync_project.py"):
        print("‚ùå –§–∞–π–ª sync_project.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        all_ok = False
    else:
        print("‚úÖ –§–∞–π–ª sync_project.py –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ sync_item.py
    print(f"\nüìú –ü—Ä–æ–≤–µ—Ä–∫–∞ sync_item.py...")
    if not os.path.exists("sync_item.py"):
        print("‚ùå –§–∞–π–ª sync_item.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        all_ok = False
    else:
        print("‚úÖ –§–∞–π–ª sync_item.py –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ yandex_disk_client.py
    print(f"\nüìú –ü—Ä–æ–≤–µ—Ä–∫–∞ yandex_disk_client.py...")
    if not os.path.exists("yandex_disk_client.py"):
        print("‚ùå –§–∞–π–ª yandex_disk_client.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        all_ok = False
    else:
        print("‚úÖ –§–∞–π–ª yandex_disk_client.py –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
    print(f"\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        import dotenv
        print("‚úÖ python-dotenv —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-dotenv")
        all_ok = False
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("\n" + "=" * 60)
    if all_ok:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç.")
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞:")
        print("   python3 test_sync_project_integration.py")
        print("   –∏–ª–∏")
        print("   python3 run_integration_test.py")
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–∞.")
    
    return all_ok


if __name__ == "__main__":
    try:
        success = check_requirements()
        sys.exit(0 if success else 1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 